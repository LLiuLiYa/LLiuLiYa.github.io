<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YumesakiKan</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-14T12:48:57.075Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YumeSakiKan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/05/14/hello-world/"/>
    <id>http://yoursite.com/2020/05/14/hello-world/</id>
    <published>2020-05-14T12:48:57.074Z</published>
    <updated>2020-05-14T12:48:57.075Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="wtf" scheme="http://yoursite.com/categories/wtf/"/>
    
    
  </entry>
  
  <entry>
    <title>Maven_1</title>
    <link href="http://yoursite.com/2020/03/19/Maven_1/"/>
    <id>http://yoursite.com/2020/03/19/Maven_1/</id>
    <published>2020-03-19T14:19:28.797Z</published>
    <updated>2020-05-14T12:49:22.470Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: 关于maven和jdbc数据库连接中学到的和一些问题<br>categories: 备忘<br>tags: Maven</p><hr><p>##所需jar包<br>1.</p><h2 id="aop切片"><a href="#aop切片" class="headerlink" title="aop切片"></a>aop切片</h2><ol><li>将列表和数组连接的方法<br><code>List&lt;数组的数据类型&gt; list = Arrays.asList(需要转换成列表的数组)</code></li><li>把类中aop的切片注释去掉，在xml中实现代理切片<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">"proxyAOP"</span> <span class="attr">class</span> = <span class="string">"sp.CalProxy_xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span><span class="comment">&lt;!-- 生成了aop的xml方式的proxy代理实例，也可在类上用@component自动扫描生成实例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"proxyAOP"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">"execution(public int sp.ICal.*(..))"</span> <span class="attr">id</span>=<span class="string">"expl"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"bf"</span> <span class="attr">pointcut-ref</span>=<span class="string">"expl"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">"af"</span> <span class="attr">pointcut-ref</span>=<span class="string">"expl"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">"afr"</span> <span class="attr">pointcut-ref</span>=<span class="string">"expl"</span> <span class="attr">returning</span>=<span class="string">"ob"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">"aft"</span> <span class="attr">pointcut-ref</span>=<span class="string">"expl"</span> <span class="attr">throwing</span>=<span class="string">"ex"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>在AfterReturning中的returning参数需要注意返回值类型是什么。</li><li>aop Aspect的自动代理<br><code>&lt;aop:aspectj-autoproxy&gt;&lt;/aop:aspectj-autoproxy&gt;</code></li><li>自动扫描类实例化<br><code>&lt;context:component-scan base-package=&quot;需要扫描的类的包名&quot;&gt;&lt;/context:component-scan&gt;</code><br><br><a id="more"></a><h2 id="jdbc数据库连接"><a href="#jdbc数据库连接" class="headerlink" title="jdbc数据库连接"></a>jdbc数据库连接</h2></li><li>获取jdbc数据连接所需数据简化<br><code>&lt;context:property-placeholder location=&quot;数据所在文件的相对地址&quot;/&gt;</code></li><li>获取连接数据库所需数据<blockquote><p>需注意property中的name需要和原来的属性值名相同（首字母小写）</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean <span class="built_in">id</span>=<span class="string">"ds"</span> <span class="built_in">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">property</span> <span class="built_in">name</span>=<span class="string">"driverClass"</span> value=<span class="string">"$&#123;jdbc.driver&#125;"</span>&gt;&lt;/<span class="keyword">property</span>&gt;</span><br><span class="line">&lt;<span class="keyword">property</span> <span class="built_in">name</span>=<span class="string">"jdbcUrl"</span> value=<span class="string">"$&#123;jdbc.url&#125;"</span>&gt;&lt;/<span class="keyword">property</span>&gt;</span><br><span class="line">&lt;<span class="keyword">property</span> <span class="built_in">name</span>=<span class="string">"user"</span> value=<span class="string">"$&#123;jdbc.user&#125;"</span>&gt;&lt;/<span class="keyword">property</span>&gt;</span><br><span class="line">&lt;<span class="keyword">property</span> <span class="built_in">name</span>=<span class="string">"password"</span> value=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;&lt;/<span class="keyword">property</span>&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></li><li>在xml中实例化jdbctemplate在main方法中获取bean实例来执行sql语句<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean <span class="built_in">id</span> =<span class="string">"jdbctem"</span> <span class="built_in">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">property</span> <span class="built_in">name</span>=<span class="string">"dataSource"</span> <span class="keyword">ref</span>=<span class="string">"ds"</span>&gt;&lt;/<span class="keyword">property</span>&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></li><li>当执行update语句修改多个记录的用int接受返回值时，需要用 <code>JSON.toJSONString(..)</code>来转换输出</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title: 关于maven和jdbc数据库连接中学到的和一些问题&lt;br&gt;categories: 备忘&lt;br&gt;tags: Maven&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;##所需jar包&lt;br&gt;1.&lt;/p&gt;
&lt;h2 id=&quot;aop切片&quot;&gt;&lt;a href=&quot;#aop切片&quot; class=&quot;headerlink&quot; title=&quot;aop切片&quot;&gt;&lt;/a&gt;aop切片&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;将列表和数组连接的方法&lt;br&gt;&lt;code&gt;List&amp;lt;数组的数据类型&amp;gt; list = Arrays.asList(需要转换成列表的数组)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;把类中aop的切片注释去掉，在xml中实现代理切片&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;proxyAOP&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;sp.CalProxy_xml&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 生成了aop的xml方式的proxy代理实例，也可在类上用@component自动扫描生成实例 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aop:config&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aop:aspect&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;proxyAOP&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aop:pointcut&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;expression&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;execution(public int sp.ICal.*(..))&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;expl&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aop:before&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bf&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;pointcut-ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;expl&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aop:after&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;af&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;pointcut-ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;expl&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aop:after-returning&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;afr&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;pointcut-ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;expl&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;returning&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ob&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aop:after-throwing&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;aft&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;pointcut-ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;expl&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;throwing&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ex&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;aop:aspect&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;aop:config&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在AfterReturning中的returning参数需要注意返回值类型是什么。&lt;/li&gt;
&lt;li&gt;aop Aspect的自动代理&lt;br&gt;&lt;code&gt;&amp;lt;aop:aspectj-autoproxy&amp;gt;&amp;lt;/aop:aspectj-autoproxy&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;自动扫描类实例化&lt;br&gt;&lt;code&gt;&amp;lt;context:component-scan base-package=&amp;quot;需要扫描的类的包名&amp;quot;&amp;gt;&amp;lt;/context:component-scan&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
